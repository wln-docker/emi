<div id="app" class="wln-layout">
    <template>
        <div class="wln">
            <div>
                <el-select v-model="query.app" placeholder="所属应用" v-on:change="refresh" style="width:168px" clearable>
                    <el-option :label="item.text" :value="item.value" v-for="item in apps"></el-option>
                </el-select>
                <el-input v-model="query.key" placeholder="按 名称、账号 进行筛选" v-onkeydown.enter.native="refresh" style="width:300px" clearable></el-input>
                <el-button type="info" icon="el-icon-refresh" v-onclick="refresh">筛选</el-button>
            </div>
            <div class="wln-line"></div>
            <el-table :data="rows" :empty-text="message" style="width:100%">
                <el-table-column width="150" align="left" label="标签" property="key"></el-table-column>
                <el-table-column width="270" property="label" label="名称"></el-table-column>
                <el-table-column></el-table-column>
                <el-table-column width="150" align="center" label="操作">
                    <template scope="scope">
                        <el-button size="mini" icon="el-icon-edit" type="warning" @@click="handleUpdate(scope.row)">编辑</el-button>
                    </template>
                </el-table-column>
            </el-table>
            <el-pagination v-on:current-change="pageset" layout="total, sizes, prev, pager, next, jumper" :total="total" :current-page="query.page" :page-size.sync="query.size" :page-sizes="[10, 20, 50, 100, 1000]" v-on:size-change="refresh"></el-pagination>
        </div>
    </template>
</div>
<script type="text/javascript">
    new Vue({
        el: '#app',
        data() {
            ds.apps = []
            ds.query.app = ''
            return ds
        },
        methods: {
            getlist() {
                this.query.message = this.loadtips
                asyncPost(location.pathname + '?do=pager', this.query).then(res => {
                    this.rows = res.rows
                    this.total = res.total
                    this.message = res.message
                })
            },
            refresh() {
                if (this.query.page > 1) {
                    this.rows = []
                    this.query.page = 1
                }
                this.getlist()
            },
            pageset(val) {
                this.query.page = val
                this.getlist()
            },
            handleUpdate(row) {
                Vue.prototype.$prompt('系统参数有缓存机制，功能不同一般会在5至60分钟后生效', '请输入配置内容', {
                    closeOnClickModal: false,
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    inputValue: row.value
                }).then(({ value }) => {
                    post(location.pathname + '?do=update', { key: row.key, label: value }).then(res => {
                        this.refresh();
                        Vue.prototype.$message({ type: res.success ? 'success' : 'error', message: res.message });
                    })
                }).catch(() => {
                    Vue.prototype.$message({ type: 'info', message: '删除操作已取消' })
                })
            }
        },
        created() {
            document.title = '标签名称管理'
            this.refresh()
            asyncGet('/system/apps?do=filters').then(res => {this.apps = res})
        }
    })
</script>