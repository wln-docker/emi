<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wlniao.XCore.AspNetCore</name>
    </assembly>
    <members>
        <member name="T:Wlniao.BusinessServiceAttribute">
            <summary>
            表示可通过AddBusiness方式动态注入的业务类
            </summary>
        </member>
        <member name="P:Wlniao.BusinessServiceAttribute.LifeTime">
            <summary>
            注入的业务类的生命周期
            </summary>
        </member>
        <member name="M:Wlniao.BusinessServiceAttribute.#ctor(Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            表示可通过AddBusiness方式动态注入的业务类
            </summary>
            <param name="serviceLifetime"></param>
        </member>
        <member name="T:Wlniao.ServiceCollectionExpand">
            <summary>
            IServiceCollection扩展类
            </summary>
        </member>
        <member name="M:Wlniao.ServiceCollectionExpand.AddBusiness(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            注册有BusinessService属性的业务组件
            </summary>
            <param name="service"></param>
            <param name="assemblyFile">要注册的DLL名称</param>
        </member>
        <member name="T:Wlniao.XCoreController">
            <summary>
            XCore扩展的Controller
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.https">
            <summary>
            请求是否为Https
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.host">
            <summary>
            当前请求Host
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.domain">
            <summary>
            当前请求域名
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.trace">
            <summary>
            链路追踪ID
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.start">
            <summary>
            当前请求开始时间
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.method">
            <summary>
            当前执行的方法，参数：do=
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.errorMsg">
            <summary>
            错误消息（不为空时输出）
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.errorTitle">
            <summary>
            错误提醒页面标题
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.errorIcon">
            <summary>
            错误提醒页面图标
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.errorHtml">
            <summary>
            错误提醒页面模板
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.RequestSecurity">
            <summary>
            当前请求是否安全
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.ErrorIcon">
            <summary>
            错误提醒页面图标
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.ErrorHtml">
            <summary>
            错误提醒页面模板
            </summary>
        </member>
        <member name="M:Wlniao.XCoreController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Wlniao.XCoreController.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wlniao.XCoreController.DebugMessage(System.String)">
            <summary>
            输出调试消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Wlniao.XCoreController.Json(System.Object)">
            <summary>
            Object输出
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.Json(System.Object,System.Text.Encoding)">
            <summary>
            Object输出
            </summary>
            <param name="data"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.JsonStr(System.String)">
            <summary>
            Json字符串输出
            </summary>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.JsonStr(System.String,System.Text.Encoding)">
            <summary>
            Json字符串输出
            </summary>
            <param name="jsonStr"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.ErrorMsg(System.String)">
            <summary>
            输出错误消息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.GetCookies(System.String)">
            <summary>
            获取Cookie指
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.GetRequestNoSecurity(System.String,System.String)">
            <summary>
            获取请求参数Get及Post
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.GetRequestSecurity(System.String,System.String)">
            <summary>
            获取请求参数（过滤非安全字符）
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.GetRequest(System.String,System.String)">
            <summary>
            获取请求参数（仅标记但不过滤非安全字符）
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.GetRequestDecode(System.String,System.String)">
            <summary>
            获取请求参数
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.GetRequestInt(System.String)">
            <summary>
            获取请求参数
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.GetPostString">
            <summary>
            获取Post的文本内容
            </summary>
            <returns></returns>
        </member>
        <member name="F:Wlniao.XCoreController.strPost">
            <summary>
            
            </summary>
        </member>
        <member name="F:Wlniao.XCoreController.ctxPost">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wlniao.XCoreController.PostRequest(System.String,System.String)">
            <summary>
            获取请求参数（仅标记但不过滤非安全字符）
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XCoreController.PostRequestInt(System.String)">
            <summary>
            获取请求参数
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="P:Wlniao.XCoreController.IsHttps">
            <summary>
            客户端请求是否为HTTPS协议(兼容X-Forwarded-Proto属性)
            </summary>
        </member>
        <member name="P:Wlniao.XCoreController.UserAgent">
            <summary>
            当前浏览器UserAgent
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wlniao.XCoreController.GetPlatform">
            <summary>
            获取当前访问使用的平台
            </summary>
            <returns></returns>
        </member>
        <member name="P:Wlniao.XCoreController.ClientIP">
            <summary>
            客户端IP地址
            </summary>
        </member>
        <member name="P:Wlniao.XCoreController.UrlHost">
            <summary>
            当前请求Host（带协议头）
            </summary>
        </member>
        <member name="P:Wlniao.XCoreController.UrlDomain">
            <summary>
            当前请求域名
            </summary>
        </member>
        <member name="P:Wlniao.XCoreController.UrlReferer">
            <summary>
            页面引用地址
            </summary>
        </member>
        <member name="P:Wlniao.XCoreController.TraceId">
            <summary>
            链路追踪ID
            </summary>
        </member>
        <member name="T:Wlniao.Middleware.ErrorHandling">
            <summary>
            异常处理中间件
            </summary>
        </member>
        <member name="M:Wlniao.Middleware.ErrorHandling.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Wlniao.Middleware.ErrorHandling.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.Middleware.ErrorHandling.HandleExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Wlniao.Mvc.AuthAttribute">
            <summary>
            需要认证
            </summary>
        </member>
        <member name="M:Wlniao.Mvc.AuthAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wlniao.Mvc.AuthAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Wlniao.Mvc.LoginAttribute">
            <summary>
            需要登录
            </summary>
        </member>
        <member name="M:Wlniao.Mvc.LoginAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wlniao.Mvc.LoginAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Wlniao.Mvc.LoginBackAttribute">
            <summary>
            需要登录且登录后返回当前页面
            </summary>
        </member>
        <member name="M:Wlniao.Mvc.LoginBackAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wlniao.Mvc.LoginBackAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Wlniao.Mvc.NoLoginAttribute">
            <summary>
            无需登录
            </summary>
        </member>
        <member name="M:Wlniao.Mvc.NoLoginAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wlniao.Mvc.NoLoginAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Wlniao.Mvc.LogoutAttribute">
            <summary>
            不能登录
            </summary>
        </member>
        <member name="M:Wlniao.Mvc.LogoutAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wlniao.Mvc.LogoutAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Wlniao.Mvc.XServerAttribute">
            <summary>
            XServer验证
            </summary>
        </member>
        <member name="M:Wlniao.Mvc.XServerAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wlniao.Mvc.XServerAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Wlniao.Mvc.XClientAttribute">
            <summary>
            是否允许XClient请求
            </summary>
        </member>
        <member name="M:Wlniao.Mvc.XClientAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Wlniao.Mvc.XClientAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Wlniao.WebService">
            <summary>
            XCore内部运行信息及状态
            </summary>
        </member>
        <member name="M:Wlniao.WebService.ServiceStop(System.String,System.String,System.String)">
            <summary>
            服务停用及停用消息
            </summary>
            <param name="node"></param>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="T:Wlniao.XServer.TokenApiController">
            <summary>
            TokenApi基础Controller
            </summary>
        </member>
        <member name="F:Wlniao.XServer.TokenApiController.token">
            <summary>
            加密密钥
            </summary>
        </member>
        <member name="F:Wlniao.XServer.TokenApiController.result">
            <summary>
            默认返回对象
            </summary>
        </member>
        <member name="M:Wlniao.XServer.TokenApiController.Check(System.Func{System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.AspNetCore.Mvc.IActionResult})">
            <summary>
            执行请求校验
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.TokenApiController.OutSuccess(System.Object)">
            <summary>
            输出数据并标记为成功
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.TokenApiController.OutSuccess(System.String)">
            <summary>
            输出默认result对象
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.TokenApiController.OutDefault">
            <summary>
            输出默认result对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:Wlniao.XServer.XController">
            <summary>
            XServer基础Controller
            </summary>
        </member>
        <member name="F:Wlniao.XServer.XController.app">
            <summary>
            当前客户端的App信息
            </summary>
        </member>
        <member name="F:Wlniao.XServer.XController._rlt">
            <summary>
            默认返回的ApiResult对象
            </summary>
        </member>
        <member name="M:Wlniao.XServer.XController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Wlniao.XServer.XController.Json(System.Object)">
            <summary>
            Object输出
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.Json(System.Object,System.Text.Encoding)">
            <summary>
            Object输出
            </summary>
            <param name="data"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.JsonStr(System.String)">
            <summary>
            Json字符串输出
            </summary>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.JsonStr(System.String,System.Text.Encoding)">
            <summary>
            Json字符串输出
            </summary>
            <param name="jsonStr"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.GetRequestNoSecurity(System.String,System.String)">
            <summary>
            获取请求参数Get及Post
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.GetRequest(System.String,System.String)">
            <summary>
            获取请求参数（仅标记但不过滤非安全字符）
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.GetRequestDecode(System.String,System.String)">
            <summary>
            获取请求参数
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.GetRequestInt(System.String)">
            <summary>
            获取请求参数
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.GetPostString">
            <summary>
            获取Post的文本内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.PostRequest(System.String,System.String)">
            <summary>
            获取请求参数（仅标记但不过滤非安全字符）
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Wlniao.XServer.XController.PostRequestInt(System.String)">
            <summary>
            获取请求参数
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
    </members>
</doc>
