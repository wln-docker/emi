<div id="app" class="wln-layout">
    <div class="wln">
        <div>
            <el-button-group style="margin-top: -2px">
                <el-button v-bind:plain="query.type!=0" type="primary" @@click="setType(0)">系统权限</el-button>
                <el-button v-bind:plain="query.type!=1" type="primary" @@click="setType(1)">业务权限</el-button>
                <el-button v-bind:plain="query.type!=2" type="primary" @@click="setType(2)">机构权限</el-button>
            </el-button-group>
            <el-input v-model="query.key" placeholder="按 名称 进行筛选" @@keydown.enter.native="refresh" style="width:300px"></el-input>
            <el-button type="info" icon="el-icon-refresh" @@click="refresh">重新加载</el-button>
        </div>
        <div class="wln-line"></div>
        <template>
            <el-table :data="organs" empty-text="暂无可配置权限的机构" v-if="query.type == 2">
                <el-table-column align="left" property="name" label="组织机构（部门）"></el-table-column>
                <el-table-column width="180" align="center" property="rolename" label="授权角色"></el-table-column>
                <el-table-column width="210" align="center" property="create" label="授权时间"></el-table-column>
                <el-table-column width="180" label="操作" align="center">
                    <template scope="scope">
                        <el-button size="mini" icon="el-icon-sort" type="primary" @@click="showRoles(scope.row.id,scope.row.role)">角色切换</el-button>
                        <el-button size="mini" icon="el-icon-tickets" type="primary" @@click="showDetails(scope.row.id)">权限详情</el-button>
                    </template>
                </el-table-column>
            </el-table>
            <el-table :data="rows" empty-text="暂无符合条件的结果" @@filter-change="filter" v-else>
                <el-table-column width="210" property="code" label="编码"></el-table-column>
                <el-table-column width="210" property="name" label="权限名" column-key="app" :filters="apps" :filter-multiple="false"></el-table-column>
                <el-table-column property="description" label="权限说明"></el-table-column>
                <el-table-column width="200" label="操作" align="center">
                    <template scope="scope">
                        <el-button size="mini" icon="el-icon-check" type="success" @@click="Change(scope.row.code)" v-if="scope.row.inlist" :plain="scope.row.empty">已授权</el-button>
                        <el-button size="mini" icon="el-icon-close" type="warning" @@click="Change(scope.row.code)" v-else :plain="scope.row.empty">{{scope.row.empty?'未授权':'拒授权'}}</el-button>
                        <el-button size="mini" icon="el-icon-refresh" type="danger" @@click="Remove(scope.row.code)" :plain="scope.row.empty" :disabled="scope.row.empty">重置</el-button>
                    </template>
                </el-table-column>
            </el-table>
        </template>
        <el-dialog title="请选择授权角色" width="360px" :visible.sync="dialog.show">
            <el-form :model="dialog.role">
                <el-select v-model="dialog.role" placeholder="请选择" style="width:320px">
                    <el-option v-for="item in roles" :label="item.label" :value="item.value"></el-option>
                </el-select>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button size="mini" type="primary" @@click="setRole('set')">切换角色</el-button>
                <el-button size="mini" type="gray" @@click="setRole('del')">移除角色</el-button>
                <el-button size="mini" @@click="close">取 消</el-button>
            </div>
        </el-dialog>

        <div class="wln-mask-layout" v-if="details.show">
            <div class="wln-mask-body" style="width:980px;overflow-y:auto;margin-top:5%;" :style="{height: details.height + 'px'}">
                <div class="wln-mask-form" style="width:100%">
                    <div class="wln-title">机构权限明细<span><i class="el-icon-close" v-on:click="close"></i></span></div>
                    <div style="padding-left:8px">
                        <el-table :data="details.rows" :height="details.height - 57" @@filter-change="detailsSearch">
                            <el-table-column width="10"></el-table-column>
                            <el-table-column width="210" property="code" label="编码"></el-table-column>
                            <el-table-column width="210" property="name" label="权限名" column-key="app" :filters="apps" :filter-multiple="false"></el-table-column>
                            <el-table-column property="description" label="权限说明"></el-table-column>
                            <el-table-column width="180" label="操作" align="center">
                                <template slot="header" slot-scope="scope">
                                    <el-input v-model="details.key" size="mini" placeholder="输入关键字筛选" v-on:input="detailsSearch" style="width:160px" />
                                </template>
                                <template scope="scope">
                                    <el-button size="mini" icon="el-icon-check" type="success" @@click="organChange(scope.row.code)" v-if="scope.row.inlist" :plain="scope.row.empty">已授权</el-button>
                                    <el-button size="mini" icon="el-icon-close" type="warning" @@click="organChange(scope.row.code)" v-else :plain="scope.row.empty">{{scope.row.empty?'未授权':'拒授权'}}</el-button>
                                    <el-button size="mini" icon="el-icon-refresh" type="danger" @@click="organRemove(scope.row.code)" :plain="scope.row.empty" :disabled="scope.row.empty">重置</el-button>
                                </template>
                            </el-table-column>
                        </el-table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    document.title = '权限控制'
    new Vue({
        el: '#app',
        data() {
            ds.query.type = 0
            ds.query.sid = ''
            ds.query.app = ''
            ds.apps = []
            ds.roles = []
            ds.organs = []
            ds.dialog = {
                organ: '',
                role: '',
                show: false
            }
            ds.details = {
                key: '',
                app: '',
                oid: '',
                role: '',
                data: [],
                rows: [],
                show: false,
                height: 700
            }
            return ds
        },
        router: new VueRouter({ mode: 'history' }),
        methods: {
            close() {
                this.dialog.show = false
                this.details.show = false
            },
            refresh() {
                if (this.query.type == 2) {
                    this.loadOrgans()
                } else {
                    this.loadAuthority()
                }
            },
            showRoles(organ, role) {
                this.dialog.organ = organ
                this.dialog.role = role
                this.dialog.show = true
            },
            showDetails(organ) {
                this.details.show = true
                this.details.oid = organ
                this.loadAuthority()
            },
            setType(to) {
                this.rows = []
                this.organs = []
                this.query.type = to
                this.refresh()
            },
            setRole(action) {
                post(location.pathname + '?do=setrole', { action: action, sid: this.query.sid, role: this.dialog.role, organ: this.dialog.organ }).then(res => {
                    Vue.prototype.$message({ type: res.success ? 'success' : 'error', message: res.message });
                    if (res.success) {
                        this.close()
                        this.loadOrgans()
                    }
                });
            },
            loadOrgans() {
                post(location.pathname + '?do=organs', { sid: this.query.sid }).then(res => { this.organs = res })
            },
            loadAuthority() {
                if (this.query.type == 2) {
                    this.details.key = ''
                    this.details.app = ''
                    post(location.pathname + '?do=authority', { sid: this.query.sid, app: this.details.app, type: this.query.type, organ: this.details.oid }).then(res => {
                        this.details.data = res.rows
                        this.details.rows = res.rows
                    })
                } else {
                    post(location.pathname + '?do=authority', { sid: this.query.sid, app: this.query.app, type: this.query.type }).then(res => { this.rows = res.rows })
                }
            },
            filter(fit) {
                this.query.app = fit && fit.app && fit.app.length > 0 ? fit.app[0] : ''
                this.loadAuthority()
            },
            detailsSearch(fit) {
                if (fit && fit.app) {
                    this.details.key = ''
                    if (fit.app.length > 0) {
                        this.details.rows = this.details.data.filter(o => o.app == fit.app[0])
                    } else {
                        this.details.rows = this.details.data
                    }
                } else if (this.details.key) {
                    this.details.rows = this.details.data.filter(o => o.code.indexOf(this.details.key) >= 0 || o.name.indexOf(this.details.key) >= 0 || o.description.indexOf(this.details.key) >= 0)
                } else {
                    this.details.rows = this.details.data
                }
            },
            Change(code) {
                post(location.pathname + '?do=change', { sid: this.query.sid, code: code }).then(res => {
                    Vue.prototype.$message({ type: res.success ? 'success' : 'error', message: res.message });
                    if (res.success) {
                        this.refresh();
                    }
                });
            },
            Remove(code) {
                post(location.pathname + '?do=remove', { sid: this.query.sid, code: code }).then(res => {
                    Vue.prototype.$message({ type: res.success ? 'success' : 'error', message: res.message });
                    if (res.success) {
                        this.refresh();
                    }
                });
            },
            organChange(code) {
                post(location.pathname + '?do=organ_change', { sid: this.query.sid, organ: this.details.oid, code: code }).then(res => {
                    Vue.prototype.$message({ type: res.success ? 'success' : 'error', message: res.message });
                    if (res.success) {
                        this.loadAuthority()
                    }
                });
            },
            organRemove(code) {
                post(location.pathname + '?do=organ_remove', { sid: this.query.sid, organ: this.details.oid, code: code }).then(res => {
                    Vue.prototype.$message({ type: res.success ? 'success' : 'error', message: res.message });
                    if (res.success) {
                        this.loadAuthority()
                    }
                });
            }
        },
        mounted() {
            this.query.sid = this.$route.query.sid
            this.setType(0);
            asyncGet('/system/apps?do=filters').then(apps => { ds.apps = apps });
            asyncGet(location.pathname + '?do=roles').then(roles => { ds.roles = roles })
        }
    });
</script>